@model MealPlanner.Models.Entities.Recipe

<h2>@Model.Name</h2>
@if (Model.RecipeImageId != null)
{
    <p>
        <a asp-action="DownloadRecipe" asp-route-id="@Model.Id">View Recipe</a>
    </p>
}
<hr />
@if (Model.Image.Data != null)
{
    <img src="data:image;base64,@System.Convert.ToBase64String(Model.Image.Data)" />
}
else
{
    <img src="@Model.Image.DataUrl" />
}
<p>
    <a href="javascript:showEditImageModal(@Model.Id)">Edit Display Image</a>
</p>
<div>
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.LastViewed)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.LastViewed)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.RecipeCategory)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.RecipeCategory.Name)
        </dd>
    </dl>
</div>
<div id="modalDiv"></div>

@await Html.PartialAsync("../RecipeDetails/Index.cshtml", Model.RecipeDetails.OrderBy(x => x.Ingredient.Name))

<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>

<style>
    img {
        max-height: 40vh;
        max-width: 100%;
    }
</style>

<script>
    function showEditImageModal(id) {
        $('#loading').show();
        $('#modalDiv').load('/Recipes/EditImage/' + id, function () {
            $('#loading').hide();
            $('#editImageModal').modal('show');
        });
    }
</script>